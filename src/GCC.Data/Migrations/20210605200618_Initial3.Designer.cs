// <auto-generated />
using System;
using GCC.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GCC.Data.Migrations
{
    [DbContext(typeof(GCCContext))]
    [Migration("20210605200618_Initial3")]
    partial class Initial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsultaExame", b =>
                {
                    b.Property<Guid>("ConsultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConsultaId", "ExameId");

                    b.HasIndex("ExameId");

                    b.ToTable("ConsultaExame");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Consulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Realizada")
                        .HasColumnType("bit");

                    b.Property<string>("Receita")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Exame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeDaMae")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Secretaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Secretaria");
                });

            modelBuilder.Entity("ConsultaExame", b =>
                {
                    b.HasOne("GCC.Business.Modelos.Consulta", null)
                        .WithMany()
                        .HasForeignKey("ConsultaId")
                        .IsRequired();

                    b.HasOne("GCC.Business.Modelos.Exame", null)
                        .WithMany()
                        .HasForeignKey("ExameId")
                        .IsRequired();
                });

            modelBuilder.Entity("GCC.Business.Modelos.Consulta", b =>
                {
                    b.HasOne("GCC.Business.Modelos.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .IsRequired();

                    b.HasOne("GCC.Business.Modelos.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GCC.Business.Modelos.Medico", b =>
                {
                    b.OwnsOne("GCC.Business.Modelos.CRM", "CRM", b1 =>
                        {
                            b1.Property<Guid>("MedicoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Numero")
                                .HasColumnType("int")
                                .HasColumnName("CRMNumero");

                            b1.Property<int>("UF")
                                .HasColumnType("int")
                                .HasColumnName("CRMUF");

                            b1.HasKey("MedicoId");

                            b1.ToTable("Medico");

                            b1.WithOwner()
                                .HasForeignKey("MedicoId");
                        });

                    b.OwnsOne("GCC.Business.Modelos.JornadaDeTrabalho", "JornadaDeTrabalho", b1 =>
                        {
                            b1.Property<Guid>("MedicoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Domingo")
                                .HasColumnType("bit")
                                .HasColumnName("Domingo");

                            b1.Property<DateTime>("HoraFim")
                                .HasColumnType("datetime2")
                                .HasColumnName("HoraFim");

                            b1.Property<DateTime>("HoraFimIntervalo")
                                .HasColumnType("datetime2")
                                .HasColumnName("HoraFimIntervalo");

                            b1.Property<DateTime>("HoraInicio")
                                .HasColumnType("datetime2")
                                .HasColumnName("HoraInicio");

                            b1.Property<DateTime>("HoraInicioIntervalo")
                                .HasColumnType("datetime2")
                                .HasColumnName("HoraInicioIntervalo");

                            b1.Property<bool>("Quarta")
                                .HasColumnType("bit")
                                .HasColumnName("Quarta");

                            b1.Property<bool>("Quinta")
                                .HasColumnType("bit")
                                .HasColumnName("Quinta");

                            b1.Property<bool>("Sabado")
                                .HasColumnType("bit")
                                .HasColumnName("Sabado");

                            b1.Property<bool>("Segunda")
                                .HasColumnType("bit")
                                .HasColumnName("Segunda");

                            b1.Property<bool>("Sexta")
                                .HasColumnType("bit")
                                .HasColumnName("Sexta");

                            b1.Property<bool>("Terca")
                                .HasColumnType("bit")
                                .HasColumnName("Terca");

                            b1.HasKey("MedicoId");

                            b1.ToTable("Medico");

                            b1.WithOwner()
                                .HasForeignKey("MedicoId");
                        });

                    b.Navigation("CRM");

                    b.Navigation("JornadaDeTrabalho");
                });
#pragma warning restore 612, 618
        }
    }
}
